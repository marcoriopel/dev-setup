---
- hosts: localhost
  connection: local
  # gather_facts: false

  vars_files:
    - config.yml

  roles:
    - role: elliotweiser.osx-command-line-tools
    - role: geerlingguy.mac.homebrew
      tags: ['homebrew']
    - role: geerlingguy.dotfiles
      when: configure_dotfiles
      tags: ['dotfiles']

  tasks:
    # - name: Install homebrew
    #   include_role:
    #     name: geerlingguy.mac.homebrew

    # - name: Make sure homebrew bin is in path
    #   ansible.builtin.lineinfile:
    #     path: /etc/paths
    #     state: present
    #     line: '/opt/homebrew/bin'
    #   become: true
    #   become_user: root

    # - name: 'add custom homebrew repos'
    #   community.general.homebrew_tap:
    #     name: [
    #       adoptopenjdk/openjdk,
    #       fishtown-analytics/dbt,
    #       heroku/brew,
    #       homebrew/cask-versions,
    #       thoughtbot/formulae,
    #       weaveworks/tap,
    #     ]

    # - name: "Install homebrew packages"
    #   community.general.homebrew:
    #     name: [
    #       'autoconf',
    #       'bash',
    #       'curl',
    #       'gh',
    #       'helm',
    #       'kubectx',
    #       'kubernetes-cli',
    #       'pre-commit',
    #       'pyenv',
    #       'skaffold',
    #       'vim',
    #       'virtualenv',
    #       'xz',
    #       'zsh',
    #       'zsh-history-substring-search',
    #     ]
    #     state: present
    #     update_homebrew: yes

    - name: "Install from Mac app store"
      shell: mas install {{ item }}
      with_items:
        - 497799835 # xcode

    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

    - name: Install Oh My ZSH
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true

    - name: Create a default VSCode configuration
      template:
        src: templates/vscode-settings.json.j2
        dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/settings.json
        owner: "{{ lookup('env', 'USER') }}"
        force: yes


    # Add something which ensures path is set here
    - name: Install VSCode extensions
      shell: code --install-extension {{ item }}
      with_items:
        - adam-watters.vscode-color-pick
        - cameron.vscode-pytest
        - dsvictor94.promela
        - eamodio.gitlens
        - editorconfig.editorconfig
        - gamunu.opentofu
        - github.copilot
        - github.copilot-chat
        - github.vscode-github-actions
        - golang.go
        - grapecity.gc-excelviewer
        - joselitofilho.ginkgotestexplorer
        - ms-azuretools.vscode-docker
        - ms-mssql.data-workspace-vscode
        - ms-mssql.mssql
        - ms-mssql.sql-bindings-vscode
        - ms-mssql.sql-database-projects-vscode
        - ms-python.debugpy
        - ms-python.isort
        - ms-python.python
        - ms-python.vscode-pylance
        - ms-toolsai.jupyter
        - ms-toolsai.jupyter-keymap
        - ms-toolsai.jupyter-renderers
        - ms-toolsai.vscode-jupyter-cell-tags
        - ms-toolsai.vscode-jupyter-slideshow
        - ms-vscode-remote.remote-containers
        - ms-vscode-remote.remote-wsl
        - ms-vscode.cpptools
        - ms-vscode.makefile-tools
        - ms-vsliveshare.vsliveshare
        - onsi.vscode-ginkgo
        - redhat.java
        - redhat.vscode-xml
        - shd101wyy.markdown-preview-enhanced
        - sourcegraph.cody-ai
        - tomoki1207.pdf
        - visualstudioexptteam.intellicode-api-usage-examples
        - visualstudioexptteam.vscodeintellicode
        - vscjava.vscode-java-debug
        - vscjava.vscode-java-dependency
        - vscjava.vscode-java-pack
        - vscjava.vscode-java-test
        - vscjava.vscode-maven
        - wholroyd.jinja
        - yzhang.markdown-all-in-one
        - zxh404.vscode-proto3

    - git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"
        version: v0.8.1

    - name: "Create a default asdf configuration"
      template:
        src: templates/.asdfrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.asdfrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: "Install asdf plugins"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf plugin-add {{ item }} || exit 0
      with_items:
        - python
        - golang

    - name: "Install Default Python"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install python 3.11.0
        asdf global python 3.11.0
        pip3 install ansible
        asdf reshim python
